trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  phpVersion: 7.2
  veracodeAppProfile: TesteMel.$(Build.DefinitionName)
  caminhoPacote: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
  SRCCLR_API_TOKEN: $(SCA)

steps:
- checkout: self  # Garante que o c칩digo fonte est치 sendo clonado

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)'  # Mudado para SourcesDirectory para focar nos arquivos de c칩digo fonte
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(caminhoPacote)'
    replaceExistingArchive: true
  displayName: 'Criando pacote para an치lise'

- script: |
    curl -O -L https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
  displayName: 'Download Pipeline Scanner'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: 'pipeline-scan-LATEST.zip'
    destinationFolder: '$(Build.ArtifactStagingDirectory)'
    cleanDestinationFolder: false

- script: |
      java -jar $(Build.ArtifactStagingDirectory)/pipeline-scan.jar -vid $(APIID) -vkey $(APIKEY) --file '$(caminhoPacote)' --issue_details true 
  displayName: 'Veracode PipelineScan'
  continueOnError: true

- task: CmdLine@2
  inputs:
    script: |
      echo "Installing Veracode SCA"
      curl -sSL 'https://download.sourceclear.com/ci.sh' | bash -s -- scan --update-advisor --pull-request --allow-dirty
  displayName: 'Run Veracode SCA'
  env:
    SRCCLR_API_TOKEN: $(SRCCLR_API_TOKEN)
  continueOnError: true
  
- task: Veracode@3
  inputs:
    ConnectionDetailsSelection: 'Credentials'
    apiId: '$(APIID)'
    apiKey: '$(APIKEY)'
    veracodeAppProfile: '$(veracodeAppProfile)'
    version: '$(build.buildNumber)'
    filepath: '$(caminhoPacote)'
    createSandBox: false
    createProfile: true
    failTheBuildIfVeracodeScanDidNotInitiate: false
    scanStatusCheckInterval: '60'
    importResults: true
    failBuildOnPolicyFail: false
  displayName: 'Veracode SAST'